{"mappings":"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","sources":["src/index.ts","src/Engine.ts","src/State.ts"],"sourcesContent":["export { default as Engine } from \"./Engine\";\nexport { default as State } from \"./State\";\n","import log from \"loglevel\";\nimport PubSub from \"pubsub-js\";\nimport State from \"./State\";\nimport { Newable } from \"./types/Newable\";\n\nconst defaultOptions = {\n  debug: false,\n  loader: false,\n};\n\ntype GameOptions = Partial<typeof defaultOptions>;\n\nexport default abstract class Engine {\n  logger = log.getLogger(\"rattler\");\n  options: GameOptions;\n  states: State[] = [];\n  running = false;\n\n  private lastUpdate = 0;\n\n  constructor(\n    public canvas: HTMLCanvasElement,\n    options: GameOptions = defaultOptions,\n  ) {\n    this.options = { ...defaultOptions, ...options };\n\n    this.handleResize();\n    const resizeObserver = new ResizeObserver(() => this.handleResize());\n    resizeObserver.observe(this.canvas);\n\n    this.logger.setLevel(options.debug ? \"debug\" : \"silent\");\n    this.logger.debug(\"Efb initialized with options\", this.options);\n  }\n\n  public abstract init(): void;\n\n  public publish = PubSub.publish.bind(PubSub);\n  public subscribe = PubSub.subscribe.bind(PubSub);\n  public unsubscribe = PubSub.unsubscribe.bind(PubSub);\n\n  public start() {\n    this.init();\n\n    this.running = true;\n    this.logger.debug(\"Rattler is running\");\n\n    // Start the game loop\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  public stop() {\n    this.running = false;\n    this.states = [];\n    this.logger.debug(\"Rattler is stopped\");\n  }\n\n  public getCurrentState() {\n    return this.states?.[this.states.length - 1];\n  }\n\n  public getPreviousState() {\n    return this.states?.[this.states.length - 2];\n  }\n\n  public loadState(StateConstructor: Newable<State>) {\n    const state = new StateConstructor(this);\n    this.pushState(state);\n\n    state.handleInit();\n  }\n\n  public pushState(state: State) {\n    const lastState = this.getCurrentState();\n\n    if (lastState) {\n      // Exit the last state before entering the new one\n      lastState.handleExit();\n    }\n\n    state.handleEnter();\n    this.states.push(state);\n  }\n\n  public popState() {\n    const lastState = this.states.pop();\n\n    if (lastState) {\n      // Exit the last state before entering the new one\n      lastState.handleExit();\n    }\n\n    const newState = this.getCurrentState();\n    newState.handleEnter();\n  }\n\n  private handleResize() {\n    this.canvas.width = this.canvas.clientWidth;\n    this.canvas.height = this.canvas.clientHeight;\n\n    this.logger.debug(\"Canvas resized to\", {\n      width: this.canvas.width,\n      height: this.canvas.height,\n    });\n\n    try {\n      this.states.forEach((state) => {\n        state?.handleResize();\n      });\n    } catch (error) {\n      this.logger.error(\"Error resizing current state\", error);\n    }\n  }\n\n  private loop(currentTime: number) {\n    let deltaTime =\n      this.lastUpdate > 0 ? (currentTime - this.lastUpdate) / 1000 : 0;\n    this.lastUpdate = currentTime;\n\n    // Cancel the loop if the delta is too large (e.g. when tab is inactive)\n    if (deltaTime > 1) {\n      deltaTime = 0;\n    }\n\n    if (!this.running) {\n      this.logger.debug(\"Efb is not running, stopping loop\");\n      this.stop();\n      return;\n    }\n\n    if (this.states.length === 0) {\n      this.logger.warn(\"No states to run, stopping loop\");\n      this.stop();\n      return;\n    }\n\n    try {\n      const state = this.getCurrentState();\n\n      // Update all states\n      state.handleUpdate(deltaTime);\n\n      // Render the current state\n      state.handleRender(this.canvas);\n    } catch (error) {\n      this.logger.error(\"Error in game loop\", error);\n    }\n\n    // Call the loop again\n    requestAnimationFrame(this.loop.bind(this));\n  }\n}\n","import Engine from \"./Engine\";\n\nexport default abstract class State {\n  public canvas!: HTMLCanvasElement;\n  public isActive = false;\n\n  constructor(public engine: Engine) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.engine.canvas.width;\n    this.canvas.height = this.engine.canvas.height;\n\n    this.handleEnter = this.handleEnter.bind(this);\n    this.handleExit = this.handleExit.bind(this);\n    this.handleKeyup = this.handleKeyup.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  onInit() {}\n  onEnter() {}\n  onExit() {}\n  onKeyup(e: KeyboardEvent) {}\n  onMouseDown(e: MouseEvent) {}\n  onMouseUp(e: MouseEvent) {}\n  onMouseMove(e: MouseEvent, mouseX: number, mouseY: number) {}\n  onResize() {}\n  beforeRender() {}\n  onUpdate(deltaTime: number) {}\n  onRender(canvas: HTMLCanvasElement) {}\n\n  handleInit() {\n    this.onInit();\n  }\n\n  handleEnter() {\n    this.isActive = true;\n\n    document.addEventListener(\"keyup\", this.handleKeyup);\n    document.addEventListener(\"mousedown\", this.handleMouseDown);\n    document.addEventListener(\"mouseup\", this.handleMouseUp);\n    document.addEventListener(\"mousemove\", this.handleMouseMove);\n\n    this.onEnter();\n  }\n\n  handleExit() {\n    this.isActive = false;\n\n    document.removeEventListener(\"keyup\", this.handleKeyup);\n    document.removeEventListener(\"mousedown\", this.handleMouseDown);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"mousemove\", this.handleMouseMove);\n\n    this.onExit();\n  }\n\n  handleKeyup(e: KeyboardEvent) {\n    this.onKeyup(e);\n  }\n\n  handleResize() {\n    this.canvas.width = this.engine.canvas.width;\n    this.canvas.height = this.engine.canvas.height;\n    this.onResize();\n  }\n\n  handleMouseDown(e: MouseEvent) {\n    this.onMouseDown(e);\n  }\n\n  handleMouseUp(e: MouseEvent) {\n    this.onMouseUp(e);\n  }\n\n  handleMouseMove(e: MouseEvent) {\n    const rect = this.engine.canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    this.onMouseMove(e, mouseX, mouseY);\n  }\n\n  handleUpdate(deltaTime: number) {\n    this.onUpdate(deltaTime);\n  }\n\n  handleRender(canvas: HTMLCanvasElement) {\n    // This method can be used to perform any pre-rendering logic\n    // before the actual rendering of the state\n    this.beforeRender();\n\n    // Call the onRender method to perform the actual rendering\n    this.onRender(canvas);\n  }\n}\n"],"names":[],"version":3,"file":"module.js.map"}